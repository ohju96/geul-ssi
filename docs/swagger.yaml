definitions:
  custom.Fail400GetResponse:
    properties:
      code:
        example: 1001
        type: integer
      message:
        example: bad request
        type: string
      status_code:
        example: 400
        type: integer
    type: object
  custom.Fail500GetResponse:
    properties:
      code:
        example: 1003
        type: integer
      message:
        example: internal server error
        type: string
      status_code:
        example: 500
        type: integer
    type: object
  custom.Response:
    properties:
      code:
        example: 1
        type: integer
      message:
        example: success
        type: string
      status_code:
        example: 200
        type: integer
    type: object
  event.Event:
    properties:
      content:
        type: string
      password:
        type: string
      time:
        type: string
      user:
        type: string
    type: object
  user.ChangePasswordRequest:
    properties:
      nickname:
        example: nickname
        type: string
      password:
        example: password
        type: string
      secretCode:
        example: uuid
        type: string
    required:
    - nickname
    - password
    - secretCode
    type: object
  user.CreateUserPayload:
    properties:
      secretCode:
        example: uuid
        type: string
      userID:
        example: 1
        type: integer
    type: object
  user.CreateUserRequest:
    properties:
      nickname:
        example: nickname
        type: string
      password:
        type: string
    required:
    - nickname
    - password
    type: object
  user.CreateUserResponse:
    properties:
      code:
        example: 1
        type: integer
      message:
        example: success
        type: string
      payload:
        $ref: '#/definitions/user.CreateUserPayload'
      status_code:
        example: 200
        type: integer
    type: object
info:
  contact: {}
paths:
  /events:
    get:
      consumes:
      - application/json
      description: 이벤트를 조회합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/custom.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/custom.Fail400GetResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/custom.Fail500GetResponse'
      summary: 이벤트 조회
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: 이벤트를 생성합니다.
      parameters:
      - description: 이벤트 생성 요청 객체
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/event.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/custom.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/custom.Fail400GetResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/custom.Fail500GetResponse'
      summary: 이벤트 생성
      tags:
      - Events
  /users:
    post:
      consumes:
      - application/json
      description: 회원가입을 하면 SecretCode를 발급합니다. SecretCode로 비밀번호 변경이나 회원 찾기에 사용되나 재발급은
        되지 않으니 보관 안내가 필요합니다.
      parameters:
      - description: 회원가입 요청 객체
        in: body
        name: userDto.CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/custom.Fail400GetResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/custom.Fail500GetResponse'
      summary: 회원가입
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: 회원가입 시 발급된 SecretCode와 Nickname을 통해 비밀번호를 변경합니다. SecretCode가 없다면
        비밀번호를 변경할 수 없습니다.
      parameters:
      - description: 비밀번호 변경 요청 객체
        in: body
        name: userDto.ChangePasswordRequest
        required: true
        schema:
          $ref: '#/definitions/user.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/custom.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/custom.Fail400GetResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/custom.Fail500GetResponse'
      summary: SecretCode로 비밀번호 변경
      tags:
      - Users
swagger: "2.0"
