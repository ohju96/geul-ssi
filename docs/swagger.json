{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/events": {
            "get": {
                "description": "이벤트를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "이벤트 조회",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "이벤트를 생성합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "이벤트 생성",
                "parameters": [
                    {
                        "description": "이벤트 생성 요청 객체",
                        "name": "eventDto.Event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        },
        "/events/heart": {
            "post": {
                "description": "이벤트에 좋아요를 누릅니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "이벤트에 좋아요를 누릅니다.",
                "parameters": [
                    {
                        "description": "좋아요 생성 요청 객체",
                        "name": "eventDto.CreateHeartReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.CreateHeartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.CreateHeartResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        },
        "/events/list": {
            "post": {
                "description": "자신이 생성한 이벤트를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Events"
                ],
                "summary": "자신이 생성한 이벤트를 조회합니다.",
                "parameters": [
                    {
                        "description": "이벤트 생성 요청 객체",
                        "name": "eventDto.GetEventReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/event.GetEventReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/event.GetEventListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "put": {
                "description": "회원가입 시 발급된 SecretCode와 Nickname을 통해 비밀번호를 변경합니다. SecretCode가 없다면 비밀번호를 변경할 수 없습니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "SecretCode로 비밀번호 변경",
                "parameters": [
                    {
                        "description": "비밀번호 변경 요청 객체",
                        "name": "userDto.ChangePasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "회원가입을 하면 SecretCode를 발급합니다. SecretCode로 비밀번호 변경이나 회원 찾기에 사용되나 재발급은 되지 않으니 보관 안내가 필요합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "회원가입",
                "parameters": [
                    {
                        "description": "회원가입 요청 객체",
                        "name": "userDto.CreateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        },
        "/wise-sayings": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "관리자 계정으로 명언을 추가합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WiseSayings"
                ],
                "summary": "명언 추가",
                "parameters": [
                    {
                        "description": "명언 추가 요청 객체",
                        "name": "wiseSayingDto.wiseSaying",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wisesaying.AddWiseSayingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/custom.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        },
        "/wise-sayings/events": {
            "get": {
                "description": "명언을 가져옵니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WiseSayings"
                ],
                "summary": "명언 가져오기",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail400GetResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/custom.Fail500GetResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "custom.Fail400GetResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1001
                },
                "message": {
                    "type": "string",
                    "example": "bad request"
                },
                "status_code": {
                    "type": "integer",
                    "example": 400
                }
            }
        },
        "custom.Fail500GetResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1003
                },
                "message": {
                    "type": "string",
                    "example": "internal server error"
                },
                "status_code": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "custom.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "event.CreateHeartReq": {
            "type": "object",
            "properties": {
                "eventId": {
                    "type": "integer",
                    "example": 1
                },
                "nickName": {
                    "type": "string",
                    "example": "nickname"
                },
                "passWord": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "event.CreateHeartResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "event.Event": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "eventId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "event.GetEventListPayload": {
            "type": "object",
            "properties": {
                "eventContents": {
                    "type": "string",
                    "example": "eventContents"
                },
                "eventID": {
                    "type": "integer",
                    "example": 1
                },
                "heartCount": {
                    "type": "integer",
                    "example": 1
                },
                "nickName": {
                    "type": "string",
                    "example": "nickname"
                }
            }
        },
        "event.GetEventListResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/event.GetEventListPayload"
                    }
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "event.GetEventReq": {
            "type": "object",
            "properties": {
                "nickName": {
                    "type": "string",
                    "example": "nickname"
                },
                "passWord": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "user.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "nickname",
                "password",
                "secretCode"
            ],
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "nickname"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "secretCode": {
                    "type": "string",
                    "example": "uuid"
                }
            }
        },
        "user.CreateUserPayload": {
            "type": "object",
            "properties": {
                "secretCode": {
                    "type": "string",
                    "example": "uuid"
                },
                "userID": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "required": [
                "nickname",
                "password"
            ],
            "properties": {
                "nickname": {
                    "type": "string",
                    "example": "nickname"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "payload": {
                    "$ref": "#/definitions/user.CreateUserPayload"
                },
                "status_code": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "wisesaying.AddWiseSayingRequest": {
            "type": "object",
            "required": [
                "nickname",
                "password",
                "wiseSaying"
            ],
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "wiseSaying": {
                    "type": "string"
                }
            }
        }
    }
}